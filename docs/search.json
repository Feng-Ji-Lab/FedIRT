[{"path":"https://feng-ji-lab.github.io/FedIRT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Biying Zhou. Maintainer, author. Feng Ji. Author.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhou B, Ji F (2025). FedIRT: Federated Item Response Theory Models. R package version 1.1.0, https://feng-ji-lab.github.io/FedIRT.","code":"@Manual{,   title = {FedIRT: Federated Item Response Theory Models},   author = {Biying Zhou and Feng Ji},   year = {2025},   note = {R package version 1.1.0},   url = {https://feng-ji-lab.github.io/FedIRT}, }"},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"fedirt","dir":"","previous_headings":"","what":"Federated Item Response Theory Models","title":"Federated Item Response Theory Models","text":"FedIRT R package enables federated estimation Item Response Theory (IRT) models, including 1PL, 2PL, Generalized Partial Credit Models (GPCM). integrating federated learning, package allows decentralized data analysis without compromising data privacy. Unlike traditional IRT packages require centralized data storage (e.g., mirt, ltm), FedIRT ensures raw response data remains local devices still achieving accurate parameter estimation.","code":""},{"path":[]},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Federated Item Response Theory Models","text":"can install FedIRT CRAN (stable release) Github (latest development version):","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"github","dir":"","previous_headings":"Installation","what":"Github","title":"Federated Item Response Theory Models","text":"","code":"devtools::install_github(\"Feng-Ji-Lab/FedIRT\") library(FedIRT)"},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"cran","dir":"","previous_headings":"Installation","what":"CRAN","title":"Federated Item Response Theory Models","text":"","code":"install.packages(\"FedIRT\") library(FedIRT)"},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"example-of-the-integrated-function","dir":"","previous_headings":"","what":"Example of the integrated function","title":"Federated Item Response Theory Models","text":"provide function fedirt_file() package, detailed usage function shown user manual. demonstrate example . Suppose dataset called dataset.csv, head dataset shown . one column indicating school, example, “site” . column indicates item, row represents answering status. First, need read dataset. , call function FedIRT::fedirt_file() get result. returns list item discriminations, item difficulties, sites’ effect students’ abilities. last, extract results use parameters analysis. Apart using results analysis, can also use summary() generate snapshot result. example . , result printed console follows:","code":"# read dataset data <- read.csv(\"dataset.csv\", header = TRUE) # call the fedirt_file function  result <- fedirt_file(data, model_name = \"2PL\") result$a result$b summary(result) Summary of FedIRT Results:   Counts: function gradient      735      249  Convergence Status (convergence): Converged  Log Likelihood (loglik): [1] -7068.258  Difficulty Parameters (b):  [1] -185.88151839    0.99524035    0.92927254   46.91467856   -2.35233826    1.14345597    2.85965632    1.10711090  [9]  233.71220828    1.38347871   -0.23225470    0.06609564   21.05618331  304.09705885 -526.66657205   -0.14986037 [17]  125.24887707   -1.84127231    1.77578683 -619.34744167    0.20255058    2.29410199    0.60079974   74.31304214 [25]    0.51858750    1.92898090    1.41023060    0.78990661  244.19315984  267.20494127  Discrimination Parameters (a):  [1]  0.0028497700  0.8440140746 -0.1190176844 -0.0004562083  0.1036843958  0.4697023939  0.7101942457 -0.3078497327  [9]  0.0028330700  0.8728839006  1.2400233647  0.6696648247 -0.0017366710  0.0036961440  0.0032205035  0.4867575811 [17]  0.0044047947  0.8489395113  3.1232339993  0.0020422999  2.5597505359  0.8018997294  0.7124263791  0.0033861896 [25] -0.6109335099  0.9633582320  0.9364984207  0.5492777654 -0.0007372862  0.0029002538  Ability Estimates: School 1:  [1] -1.127097195 -0.922572829 -0.993953038  0.745126617 -0.868615677 -0.004496743 -1.335763756  0.332411623 -0.142946965 [10]  0.629199961  0.996064766  0.309137271 -0.491584992  0.811880515  0.637819122  0.807362215 -0.282205981 -0.151977508 [19]  1.489247834  0.106648066  0.070863058 -0.416262895 -0.551055060  1.089358870  0.994025477  0.114350612  0.355500117 [28]  2.181192348 -0.981141292  1.997921738  0.574057494 -1.273791145  0.083981386 -1.081395968  0.577419301 -1.200115434 [37] -0.166930167 -0.565659142  1.627428221 -1.222954662  1.502485975 -0.602600794  0.285920178 -1.269207201 -0.294879662 [46]  0.185131361  0.774232875  0.639405432  0.240086421 -0.806747734  0.707963753 School 2:  [1] -1.41454573  1.78068772  1.87469389 -0.69393008 -0.64043522  1.00878902 -1.43625257  0.07875106 -0.48109615 -1.74497145 [11] -0.13588161  0.32713940  0.94361431 -1.10251295 -0.22403442 -1.66690636 -1.20809314 -0.06835826  0.07914619  0.95114421 [21]  0.56027437 -0.93870651  1.25793922  1.23499573  0.49142582  0.95265981 -0.41232544 -1.10838230  0.69450509  0.35078204 [31] -0.86098959  0.94962010 -0.90753669  0.71935052 -1.07196001  0.35589643 ...  End of Summary"},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"example-of-the-personscore-function","dir":"","previous_headings":"","what":"Example of the personscore function","title":"Federated Item Response Theory Models","text":"provide function personscore package. detailed usage function shown user manual. demonstrate example . Summary person score shown .","code":"personscoreResult = personscore(result) summary(personscoreResult) Summary of FedIRT Person Score Results:  Ability Estimates: School 1:  [1] -1.127097195 -0.922572829 -0.993953038  0.745126617 -0.868615677 -0.004496743 -1.335763756  0.332411623 -0.142946965 [10]  0.629199961  0.996064766  0.309137271 -0.491584992  0.811880515  0.637819122  0.807362215 -0.282205981 -0.151977508 [19]  1.489247834  0.106648066  0.070863058 -0.416262895 -0.551055060  1.089358870  0.994025477  0.114350612  0.355500117 [28]  2.181192348 -0.981141292  1.997921738  0.574057494 -1.273791145  0.083981386 -1.081395968  0.577419301 -1.200115434 [37] -0.166930167 -0.565659142  1.627428221 -1.222954662  1.502485975 -0.602600794  0.285920178 -1.269207201 -0.294879662 [46]  0.185131361  0.774232875  0.639405432  0.240086421 -0.806747734  0.707963753 School 2:  [1] -1.41454573  1.78068772  1.87469389 -0.69393008 -0.64043522  1.00878902 -1.43625257  0.07875106 -0.48109615 -1.74497145 [11] -0.13588161  0.32713940  0.94361431 -1.10251295 -0.22403442 -1.66690636 -1.20809314 -0.06835826  0.07914619  0.95114421 [21]  0.56027437 -0.93870651  1.25793922  1.23499573  0.49142582  0.95265981 -0.41232544 -1.10838230  0.69450509  0.35078204 [31] -0.86098959  0.94962010 -0.90753669  0.71935052 -1.07196001  0.35589643 ...  End of Summary"},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"example-of-the-personfit-function","dir":"","previous_headings":"","what":"Example of the personfit function","title":"Federated Item Response Theory Models","text":"provide function personfit package. detailed usage function shown user manual. demonstrate example . getting result, use personfit function get person score result result personfit(result).","code":"personfitResult = personfit(result) summary(personfitResult) Summary of FedIRT Person Fit Results:  Fit Estimates: School 1:                Lz           Zh       Infit    Outfit 4    0.7584470759  0.923163304 0.002323484 0.1482672 16  -0.7562447025 -1.131668935 0.005457117 0.1799583 27   0.3417488360  0.357870094 0.005966933 0.1734402 33  -0.9244005411 -1.359789298 0.179834037 0.2266634 ... School 2:              Lz           Zh        Infit    Outfit 5   -0.90114567 -1.175767350 0.0009824580 0.1535794 8   -1.47957351 -1.888763364 0.1491518127 0.2255230 18  -0.13292541 -0.228824721 0.1104556086 0.2007658 19  -0.17257549 -0.277699184 0.0075031313 0.1350857 ..."},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"standard-error-se-calculation","dir":"","previous_headings":"","what":"Standard error (SE) calculation","title":"Federated Item Response Theory Models","text":"follow typical process calculating SE MLE. obtaining MLE estimates, Hessian matrix, matrix second-order partial derivatives log-likelihood function respect parameters, computed estimated parameters. SEs derived square roots diagonal elements inverse Hessian matrix. package, call SE() function input fedirt object display standard errors item parameters. result SE.","code":"SE(result) $a  [1] 0.0041815497 0.1638884452 0.1204696925 ... $b  [1] 272.43863961   0.20737386   1.25896302 ..."},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"example-of-the-shiny-app","dir":"","previous_headings":"","what":"Example of the Shiny App","title":"Federated Item Response Theory Models","text":"provide wider access practitioners, include Shiny user interface package. detailed manual provided package. Taking 2PL example, illustrate use Shiny app . first step, server end (e.g., test administer, school board) can launched running Shiny app runserver() client-end Shiny app can initialized runclient() interface shown : client first launches, automatically connect localhost port 8000 default. server deployed another computer, type server’s IP address port (displayed server’s interface), click “reconnect”. screenshots user interface shown . , client choose file upload local Shiny app local calculations, without sending server. file csv file, either binary graded response, clients share number items, maximum score item (answers polytomous), otherwise, error message suggesting check datasets clients. clients upload data, server click “start” begin federated estimates process model converges, client click “receive result”. server display item parameters client display item parameters individual ability estimates. clients also display bar plots ability estimates.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"community-guidelines","dir":"","previous_headings":"","what":"Community Guidelines","title":"Federated Item Response Theory Models","text":"welcome contributions feedback!","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Federated Item Response Theory Models","text":"contribute, fork repository, create new branch, make changes, submit pull request. Ensure code well-documented passes checks.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"reporting-issues","dir":"","previous_headings":"","what":"Reporting Issues","title":"Federated Item Response Theory Models","text":"Found bug feature request? Open issue GitHub Issues page clear description steps reproduce.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/index.html","id":"seeking-support","dir":"","previous_headings":"","what":"Seeking Support","title":"Federated Item Response Theory Models","text":"Check documentation, search existing issues, post question GitHub. urgent matters, contact f.ji@utoronto.ca. Thank helping improve FedIRT!","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 FedIRT authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"synthetic dataset composed responses 160 students 10 items, responses binary.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"","code":"example_data_2PL"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"dataframe 160 rows 10 columns. row corresponds student's set responses, column represents responses students particular item.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"data synthetically generated.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"response 1 indicates correct answer, 0 represents incorrect answer.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL","text":"","code":"data(example_data_2PL)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","text":"synthetic dataset composed responses 81 students 10 items, responses binary. first part \"example_data_2PL\". used test correctness federated 2PL model. response 1 indicates correct answer, 0 represents incorrect answer.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","text":"","code":"example_data_2PL_1"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","text":"dataframe 81 rows 10 columns. row corresponds student's set responses, column represents responses students particular item.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","text":"data synthetically generated.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_1","text":"","code":"data(example_data_2PL_1)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","text":"synthetic dataset composed responses 79 students 10 items, responses binary. second part \"example_data_2PL\". used test correctness federated 2PL model. response 1 indicates correct answer, 0 represents incorrect answer.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","text":"","code":"example_data_2PL_2"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","text":"dataframe 79 rows 10 columns. row corresponds student's set responses, column represents responses students particular item.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","text":"data synthetically generated.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_2PL_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Response Dataset for Federated 2PL Model — example_data_2PL_2","text":"","code":"data(example_data_2PL_2)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":null,"dir":"Reference","previous_headings":"","what":"Graded Response Dataset for Federated Graded Model — example_data_graded","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"synthetic dataset containing responses 100 students across 10 items, items graded response (0-3 points). kind dataset typically used testing validating federated graded response models.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"","code":"example_data_graded"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"data frame 100 rows 10 columns. row represents responses single student, column represents one 10 graded response items.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"data created demonstration purposes.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"dataset particularly suitable testing federated graded model.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graded Response Dataset for Federated Graded Model — example_data_graded","text":"","code":"data(example_data_graded)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded_and_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","title":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","text":"synthetic dataset containing 160 students 8 items, first item graded response (0-3 points) items binary response. used federated graded model testing.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded_and_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","text":"","code":"example_data_graded_and_binary"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded_and_binary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","text":"dataframe 160 rows 8 columns. row denotes student's responding status, column denotes responding status students one item.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded_and_binary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","text":"data generated synthetically illustrative purposes.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/example_data_graded_and_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graded Response Dataset for Federated Graded Model — example_data_graded_and_binary","text":"","code":"data(example_data_graded_and_binary)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated IRT model — fedirt","title":"Federated IRT model — fedirt","text":"function combines types algorithm federated IRT models. inputs dataset return estimated IRT parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated IRT model — fedirt","text":"","code":"fedirt(inputdata, model_name = \"2PL\", school_effect = FALSE, federated = \"Avg\")"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated IRT model — fedirt","text":"inputdata list responding matrices. model_name name model want use. Can \"1PL\" \"2PL\" \"graded\". \"1PL\" refers Rasch Model, \"2PL\" refers two-parameter logistic model, \"graded\" refers graded model. school_effect bool parameter, TRUE refers considering school effect fixed effect. Default FALSE. federated federated learning method. Default \"Avg\", meaning using Federated Average. Can also \"Med\", meaning Federated Median.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated IRT model — fedirt","text":"Corresponding model result list.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated IRT model — fedirt","text":"Input list responding matrices school, every responding matrix one site's data.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Federated IRT model — fedirt","text":"","code":"if (FALSE) { # \\dontrun{ # turn input data to a list inputdata = list(as.matrix(example_data_2PL)) # Call fedirt() function, and use 2PL model with school effect as a fixed effect fedresult = fedirt(inputdata, model_name = \"2PL\",school_effect = TRUE)  # turn input data to a list inputdata = list(as.matrix(example_data_2PL_1), as.matrix(example_data_2PL_2)) # Call fedirt() function, and use graded model fedresult = fedirt(inputdata, model_name = \"graded\") } # }"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_2PL.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated 2PL model — fedirt_2PL","title":"Federated 2PL model — fedirt_2PL","text":"function implements federated learning approach estimate parameters 2PL IRT model. allows collaborative estimation across multiple datasets, maintaining privacy individual data source. federated 2PL model particularly useful contexts data sharing might limited due privacy concerns logistical constraints.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_2PL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated 2PL model — fedirt_2PL","text":"","code":"fedirt_2PL(J, logL_entry, g_logL_entry)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_2PL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated 2PL model — fedirt_2PL","text":"J integer indicating number items IRT model across sites. number consistent response matrices provided. logL_entry function calculates sum log-likelihoods response matrices across sites. function crucial evaluating fit model iteration. g_logL_entry function computes aggregated gradient log-likelihood across participating entities.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_2PL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated 2PL model — fedirt_2PL","text":"list containing following components federated 2PL model estimation: par: Numeric vector model's fitted parameters including item discrimination () item difficulty (b) parameters. value: optimization objective function's value found solution, typically log-likelihood. counts: Named integer vector counts function evaluations gradient evaluations optimization. convergence: Integer code indicating optimization's convergence status (0 indicates successful convergence). message: Message optimizer optimization process, NULL message available. loglik: calculated log-likelihood fitted model, identical 'value' element objective function log-likelihood. : Numeric vector estimated item discrimination parameters. b: Numeric vector estimated item difficulty parameters. person: List containing person-related estimates elements: : Vector discrimination parameters (top-level ''). b: Vector difficulty parameters (top-level 'b'). ability: List numeric vectors person abilities per site. site: Numeric vector abilities locations specific site. person: List numeric vectors person abilities minus site ability.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_2PL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated 2PL model — fedirt_2PL","text":"algorithm leverages federated learning techniques estimate shared item parameters individual ability levels without requiring raw data combined single dataset. estimation procedure composed several steps, including initialization, local computations data source, communication summary statistics central server, global parameter updates. cycle repeated convergence criteria met global parameters stabilize. Regarding input parameters, 'J' number items across sites, consistent known advance. 'logL_entry' parameter function computes log-likelihood observed responses given current model parameters. Likewise, 'g_logL_entry' expected function computes gradient log-likelihood respect model parameters inform optimization process parameter estimation.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated IRT model — fedirt_file","title":"Federated IRT model — fedirt_file","text":"function combines types algorithm federated IRT models. inputs dataframe return estimated IRT parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated IRT model — fedirt_file","text":"","code":"fedirt_file(   inputdata,   model_name = \"2PL\",   school_effect = FALSE,   federated = \"Avg\",   colname = \"site\" )"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated IRT model — fedirt_file","text":"inputdata dataframe. model_name name model want use. Can \"1PL\" \"2PL\" \"graded\". \"1PL\" refers Rasch Model, \"2PL\" refers two-parameter logistic model, \"graded\" refers graded model. school_effect bool parameter, TRUE refers considering school effect fixed effect. Default FALSE. federated federated learning method. Default \"Avg\", meaning using Federated Average. Can also \"Med\", meaning Federated Median. colname Column name indicating school.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated IRT model — fedirt_file","text":"Corresponding model result list.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated IRT model — fedirt_file","text":"Input dataframe school column indicating school name.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Federated IRT model — fedirt_file","text":"","code":"if (FALSE) { # \\dontrun{ data <- read.csv(\"dataset.csv\", header = TRUE) fedresult <- fedirt_file(data, model_name = \"2PL\") } # }"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated Graded Response Model Estimation Function — fedirt_gpcm","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"Implements federated learning approach estimation graded response model parameters, enabling collaborative parameter estimation across distributed datasets ensuring individual data source privacy.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"","code":"fedirt_gpcm(J, M, logL_entry, g_logL_entry)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"J integer indicating number items IRT model across sites. number consistent response matrices provided. M integer vector indicating maximum level (number categories minus one) item across sites, determines total number step difficulties estimate graded response model. logL_entry function calculates sum log-likelihoods response matrices across sites. function crucial evaluating fit model iteration. g_logL_entry function computes aggregated gradient log-likelihood across participating entities.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"list containing following components federated graded model estimation: par: Numeric vector model's fitted parameters including item discrimination () item difficulty (b) parameters. value: optimization objective function's value found solution, typically log-likelihood. counts: Named integer vector counts function evaluations gradient evaluations optimization. convergence: Integer code indicating optimization's convergence status (0 indicates successful convergence). message: Message optimizer optimization process, NULL message available. loglik: calculated log-likelihood fitted model, identical 'value' element objective function log-likelihood. : Numeric vector estimated item discrimination parameters. b: Numeric vector estimated item difficulty parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"function adopts federated learning framework perform estimation item step difficulties individual ability levels IRT graded response model without needing pool data one centralized dataset. estimator follows iterative optimization procedure consisisting local computations, information sharing central aggregator, updating global parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/fedirt_gpcm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Federated Graded Response Model Estimation Function — fedirt_gpcm","text":"Muraki, E. (1992). generalized partial credit model: Application EM algorithm. Applied Psychological Measurement, 16(2), 159–176. doi:10.1177/014662169201600206","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","title":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","text":"Calculates gradients log-likelihood function respect item discrimination () difficulty (b) parameters Two-Parameter Logistic (2PL) Item Response Theory (IRT) model. computation vital optimizing item parameters via gradient-based optimization algorithms.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","text":"","code":"g_logL(a, b, data, q = 21, lower_bound = -3, upper_bound = 3)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","text":"Numeric vector item discrimination parameters 2PL model. b Numeric vector item difficulty parameters 2PL model. data matrix observed item responses, individuals rows items columns. q number Gaussian quadrature points numerical integration (default 21). lower_bound lower bound Gaussian quadrature integration (default -3). upper_bound upper bound Gaussian quadrature integration (default 3).","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","text":"list containing two elements: gradient vector respect item discrimination parameters ('') gradient vector respect item difficulty parameters ('b').","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gradient of Log-Likelihood for the federated 2PL Model — g_logL","text":"function approximates partial derivatives utilizing Gaussian quadrature numerical integration. Memoization techniques used cache intermediate results, crucial efficient computation avoids redundant calculations. can significantly speed iterative algorithms, particularly context large datasets. partial gradient parameter : $$ \\frac{ \\partial l_k}  { \\partial \\alpha_j } = \\sum\\limits_{n=1}^{q} \\sum\\limits_{=1}^{N_k} (V_{ik}(n) - \\beta_j) [ r_{ijnk} - m_{ink} P_j(V_{ik}(n))] $$ $$ \\frac{ \\partial l_k}  { \\partial \\beta_j } = (-\\alpha_j)\\sum\\limits_{n=1}^{q} \\sum\\limits_{=1}^{N_k} [ r_{ijnk} - m_{ink} P_j(V_{ik}(n))] $$","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","title":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","text":"Calculates sum gradients log-likelihood respect item discrimination () difficulty (b) parameters across schools participating federated learning process. function g_logL_entry critical component gradient-based optimization process within fedirt.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","text":"","code":"g_logL_entry(ps)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","text":"ps numeric vector including model's current estimates item parameters, organized consecutively discrimination parameters followed difficulty parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","text":"matrix first half rows corresponds aggregated gradient respect item discrimination parameters second half corresponds aggregated gradient respect item difficulty parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_entry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregated Gradient of Log-Likelihood for Federated Learning — g_logL_entry","text":"function aggregates gradients computed locally school. cumulative gradient used optimization algorithm update model parameters. school implement function get_g_logL_from_index computes gradients log-likelihood locally. function needs aligned federated learning framework, typically involving network communication retrieve gradient information. simplified scenarios, initial testing development, users can substitute network communication direct call local g_logL function computes gradient log-likelihood.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_gpcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","title":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","text":"Calculates gradients log-likelihood function respect item discrimination () difficulty (b) parameters graded IRT model. computation vital optimizing item parameters via gradient-based optimization algorithms.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_gpcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","text":"","code":"g_logL_gpcm(a, b, data, q = 21, lower_bound = -3, upper_bound = 3)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_gpcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","text":"Numeric vector item discrimination parameters graded model. b Numeric vector item difficulty parameters graded model. data matrix observed item responses, individuals rows items columns. q number Gaussian quadrature points numerical integration (default 21). lower_bound lower bound Gaussian quadrature integration (default -3). upper_bound upper bound Gaussian quadrature integration (default 3).","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_gpcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","text":"list containing two elements: gradient vector respect item discrimination parameters ('') gradient vector respect item difficulty parameters ('b').","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/g_logL_gpcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gradient of Log-Likelihood for the federated graded Model — g_logL_gpcm","text":"function approximates partial derivatives utilizing Gaussian quadrature numerical integration. Memoization techniques used cache intermediate results, crucial efficient computation avoids redundant calculations. can significantly speed iterative algorithms, particularly context large datasets.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Likelihood of the federated 2PL Model — logL","title":"Log-Likelihood of the federated 2PL Model — logL","text":"Computes log-likelihood Two-Parameter Logistic (2PL) IRT model given item parameters response data. computation utilizes numerical integration optimized memoization repeated evaluations.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Likelihood of the federated 2PL Model — logL","text":"","code":"logL(a, b, data, q = 21, lower_bound = -3, upper_bound = 3)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Likelihood of the federated 2PL Model — logL","text":"vector item discrimination parameters 2PL model. b vector item difficulty parameters 2PL model. data matrix observed responses, individuals rows items columns. q number Gaussian quadrature points use numerical integration (default 21). Gaussian quadrature numerical integration technique approximate integral function, particularly useful accurate efficient computation. lower_bound lower limit Gaussian quadrature integration (default -3). upper_bound upper limit Gaussian quadrature integration (default 3).","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Likelihood of the federated 2PL Model — logL","text":"computed log-likelihood 2PL model single numeric value.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-Likelihood of the federated 2PL Model — logL","text":"function performs numerical integration set quadrature points calculate probabilities observed responses 2PL model, considering item discrimination () difficulty (b) parameters. Memoization used cache computed values probabilities, logits, log-likelihoods avoid redundant calculations speed process.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","title":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","text":"Computes sum log-likelihoods across multiple schools federated learning setting. function logL_entry aggregates contribution school's log-likelihood overall model. designed used within optimization process fedirt.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","text":"","code":"logL_entry(ps)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","text":"ps parameter vector consisting item parameters; include discrimination () difficulty (b) parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","text":"sum log-likelihoods single numeric value, representing likelihood entire federated dataset current model's parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_entry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Log-Likelihood Function for Federated Learning — logL_entry","text":"federated learning context, school computes log-likelihood locally. logL_entry function responsible aggregating values. Users expected provide implementation getlogL_from_index, include network requests retrieve log-likelihoods calculated school, simplified prototyping purposes, directly use logL function compute likelihoods locally.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_gpcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Likelihood of the federated graded Model — logL_gpcm","title":"Log-Likelihood of the federated graded Model — logL_gpcm","text":"Computes log-likelihood graded IRT model given item parameters response data. computation utilizes numerical integration optimized memoization repeated evaluations.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_gpcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Likelihood of the federated graded Model — logL_gpcm","text":"","code":"logL_gpcm(a, b, data, q = 21, lower_bound = -3, upper_bound = 3)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_gpcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Likelihood of the federated graded Model — logL_gpcm","text":"vector item discrimination parameters graded model. b vector item difficulty parameters graded model. data matrix observed responses, individuals rows items columns. q number Gaussian quadrature points use numerical integration (default 21). Gaussian quadrature numerical integration technique approximate integral function, particularly useful accurate efficient computation. lower_bound lower limit Gaussian quadrature integration (default -3). upper_bound upper limit Gaussian quadrature integration (default 3).","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_gpcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Likelihood of the federated graded Model — logL_gpcm","text":"computed log-likelihood graded model single numeric value.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/logL_gpcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-Likelihood of the federated graded Model — logL_gpcm","text":"function performs numerical integration set quadrature points calculate probabilities observed responses graded model, considering item discrimination () difficulty (b) parameters. Memoization used cache computed values probabilities, logits, log-likelihoods avoid redundant calculations speed process.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/mem.html","id":null,"dir":"Reference","previous_headings":"","what":"Memoization Function for Speed Optimization — mem","title":"Memoization Function for Speed Optimization — mem","text":"simple memoization function stores results expensive function calls reuses results inputs occur . technique greatly speeds computation fedirt function caching previously computed values.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Memoization Function for Speed Optimization — mem","text":"","code":"mem(f)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Memoization Function for Speed Optimization — mem","text":"f Function memd.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/mem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Memoization Function for Speed Optimization — mem","text":"Returns memd version function f cache previously computed results faster subsequent evaluations, especially beneficial applied fedirt.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/mem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Memoization Function for Speed Optimization — mem","text":"","code":"# To mem a function, simply wrap it with `mem`: mem(function(a,b){return(a+b)}) #> function (...)  #> { #>     key <- paste(list(...), collapse = \" ,\") #>     if (!exists(as.character(key), envir = memo)) { #>         memo[[as.character(key)]] <- f(...) #>     } #>     memo[[as.character(key)]] #> } #> <bytecode: 0x000001a0acc9a740> #> <environment: 0x000001a0acc9b460>"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated IRT person fit — personfit","title":"Federated IRT person fit — personfit","text":"personfit calculates Zh values, infit outfit statistics. returned object list.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated IRT person fit — personfit","text":"","code":"personfit(fedresult)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated IRT person fit — personfit","text":"fedresult fedirt result object","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated IRT person fit — personfit","text":"list person fit school.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated IRT person fit — personfit","text":"Input object fedirt class.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Federated IRT person fit — personfit","text":"","code":"# turn input data to a list inputdata = list(as.matrix(example_data_2PL)) # Call fedirt() function, and use 2PL model fedresult = fedirt(inputdata, model_name = \"2PL\") personfitResult = personfit(fedresult)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated IRT person score — personscore","title":"Federated IRT person score — personscore","text":"function calculates persons' ability.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated IRT person score — personscore","text":"","code":"personscore(fedresult)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated IRT person score — personscore","text":"fedresult fedirt result object","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated IRT person score — personscore","text":"list person score school.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated IRT person score — personscore","text":"Input object fedirt class.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/personscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Federated IRT person score — personscore","text":"","code":"# turn input data to a list inputdata = list(as.matrix(example_data_2PL)) # Call fedirt() function, and use 2PL model fedresult = fedirt(inputdata, model_name = \"2PL\") personscoreResult = personscore(fedresult)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runclient.html","id":null,"dir":"Reference","previous_headings":"","what":"Client for Federated IRT Model Estimation — runclient","title":"Client for Federated IRT Model Estimation — runclient","text":"Initializes client interface federated learning estimation Item Response Theory (IRT) model parameters, connecting central server participate collaborative parameter estimation. essential start server prior client ensure client can establish successful connection, otherwise error occur.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runclient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Client for Federated IRT Model Estimation — runclient","text":"","code":"runclient()"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runclient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Client for Federated IRT Model Estimation — runclient","text":"shows discriminations difficulties item plot . Also displays students' abilities.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runclient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Client for Federated IRT Model Estimation — runclient","text":"client interface, built Shiny, provides interactive platform enables users upload response matrix data CSV format, connect central server, receive estimation results computation complete. client sends computed local statistics partial results server, aggregates information clients update global IRT model parameters. Users can input server's IP address port number, reconnect needed, visualize computed item ability parameters plots tables displayed interface. client capable uploading data, processing locally compute log-likelihood gradient information, sending details server based HTTP POST requests. client also includes functionality handle responses server, either signal status connection receive display results federated estimation process. interactive client-server architecture, federated IRT model estimation becomes seamless process, allowing participants contribute computational resources preserving data privacy within local environments. Additional client functions include local IP retrieval network communication, server connection initiation, response data processing, result visualization. Interactive components built Shiny enable smooth user experience real-time updates, making client integral part federated IRT model estimation framework.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runclient.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Client for Federated IRT Model Estimation — runclient","text":"shiny app used together server version. Run server run client, get correct address server interface initialize estimating process.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runserver.html","id":null,"dir":"Reference","previous_headings":"","what":"Server for Federated IRT Model Estimation — runserver","title":"Server for Federated IRT Model Estimation — runserver","text":"Launches server handles federated learning across multiple schools institutions estimation Item Response Theory (IRT) model parameters. server facilitates communication central aggregator distributed data sources, coordinating data sharing process maintaining privacy.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runserver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server for Federated IRT Model Estimation — runserver","text":"","code":"runserver()"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runserver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server for Federated IRT Model Estimation — runserver","text":"return value, called side effects (initiates interactive Shiny server session) display estimates interface.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runserver.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server for Federated IRT Model Estimation — runserver","text":"server establishes federated learning environment participating entity (school) computes parts model locally. server collects summary statistics entity uses update global model parameters. features user interface initiating estimation process displaying results federated learning procedure. user interface provides real-time information connected schools, data consistency checks, mode IRT model estimated (binary graded). Function 'updateM' checks consistency number maximum item levels across schools, setting flag indicate whether binary graded model used. Function 'check_J' ensures schools consistent number items datasets. 'ui' function serves user interface server, 'getLocalIP' retrieves server's IP address connections. Finally, 'server' function contains logic receiving data schools, triggering estimation process, sending results back participating schools. Overall, 'runserver' function orchestrates federated IRT model estimation process combining local computations schools, managing data traffic, executing appropriate estimation function, providing users interactive web interface. web interface built using Shiny, allowing users check connection statuses, start estimation process, view results. supports GET POST HTTP methods handling data exchange clients. server designed flexible can adapted various federated learning scenarios education sector.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/runserver.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Server for Federated IRT Model Estimation — runserver","text":"shiny app used together client version.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Federated IRT SE — SE","title":"Federated IRT SE — SE","text":"Calculates Standard Error(SE) FedIRT models.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Federated IRT SE — SE","text":"","code":"SE(fedresult)"},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Federated IRT SE — SE","text":"fedresult fedirt result object","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Federated IRT SE — SE","text":"array standard errors parameters.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Federated IRT SE — SE","text":"Input object fedirt class.","code":""},{"path":"https://feng-ji-lab.github.io/FedIRT/reference/SE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Federated IRT SE — SE","text":"","code":"# turn input data to a list inputdata = list(as.matrix(example_data_2PL)) # Call fedirt() function, and use 2PL model fedresult = fedirt(inputdata, model_name = \"2PL\") # get SE result SEresult = SE(fedresult)"}]
